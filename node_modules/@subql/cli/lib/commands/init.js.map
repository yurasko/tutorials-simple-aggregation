{"version":3,"file":"init.js","sourceRoot":"","sources":["../../src/commands/init.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport fs from 'fs';\nimport path from 'path';\nimport {URL} from 'url';\nimport {Command, flags} from '@oclif/command';\nimport chalk from 'chalk';\nimport cli from 'cli-ux';\nimport fuzzy from 'fuzzy';\nimport * as inquirer from 'inquirer';\nimport {\n  fetchTemplates,\n  Template,\n  installDependencies,\n  cloneProjectTemplate,\n  cloneProjectGit,\n  readDefaults,\n  prepare,\n} from '../controller/init-controller';\nimport {getGenesisHash} from '../jsonrpc';\nimport {ProjectSpecBase, ProjectSpecV0_2_0} from '../types';\n\n// Helper function for fuzzy search on prompt input\nfunction filterInput(arr: string[]) {\n  return (_: any, input: string) => {\n    input = input || '';\n    return new Promise((resolve) => {\n      resolve(\n        fuzzy.filter(input, arr).map((el) => {\n          return el.original;\n        })\n      );\n    });\n  };\n}\n\nasync function promptValidRemoteAndBranch(): Promise<string[]> {\n  let isValid = false;\n  let remote: string;\n  while (!isValid) {\n    try {\n      remote = await cli.prompt('Custom template git remote', {\n        required: true,\n      });\n      new URL(remote);\n      isValid = true;\n    } catch (e) {\n      console.log(`Not a valid git remote URL: '${remote}', try again`);\n      continue;\n    }\n  }\n  const branch = await cli.prompt('Custom template git branch', {\n    required: true,\n  });\n  return [remote, branch];\n}\n\nexport default class Init extends Command {\n  static description = 'Initialize a scaffold subquery project';\n\n  static flags = {\n    force: flags.boolean({char: 'f'}),\n    location: flags.string({char: 'l', description: 'local folder to create the project in'}),\n    'install-dependencies': flags.boolean({description: 'Install dependencies as well', default: false}),\n    npm: flags.boolean({description: 'Force using NPM instead of yarn, only works with `install-dependencies` flag'}),\n    specVersion: flags.string({\n      required: false,\n      options: ['0.0.1', '0.2.0'],\n      default: '0.2.0',\n      description: 'The spec version to be used by the project',\n    }),\n  };\n\n  static args = [\n    {\n      name: 'projectName',\n      description: 'Give the starter project name',\n    },\n  ];\n\n  async run(): Promise<void> {\n    const {args, flags} = this.parse(Init);\n\n    if (flags.specVersion === '0.0.1') {\n      this.log(\n        `${chalk.yellow(\n          'WARNING'\n        )} Using specVersion v0.0.1 is deprecated and in the future will be denied from being uploaded to the subquery hosted service. Consider initializing your project with specVersion v0.2.0`\n      );\n    }\n\n    const project = {} as ProjectSpecBase;\n    const location = flags.location ? path.resolve(flags.location) : process.cwd();\n\n    project.name = args.projectName\n      ? args.projectName\n      : await cli.prompt('Project name', {default: 'subql-starter', required: true});\n    if (fs.existsSync(path.join(location, `${project.name}`))) {\n      throw new Error(`Directory ${project.name} exists, try another project name`);\n    }\n\n    let skipFlag = false;\n    let gitRemote: string;\n    let gitBranch: string;\n    let templates: Template[];\n    let selectedTemplate: Template;\n    let selectedNetwork: string;\n\n    try {\n      templates = await fetchTemplates();\n    } catch (e) {\n      this.error(e);\n    }\n\n    const networks = templates\n      .map(({network}) => network)\n      .filter((n, i, self) => {\n        return i === self.indexOf(n);\n      });\n    networks.push('Other');\n\n    // Network\n    inquirer.registerPrompt('autocomplete', require('inquirer-autocomplete-prompt'));\n    await inquirer\n      .prompt([\n        {\n          name: 'networkResponse',\n          message: 'Select a network',\n          type: 'autocomplete',\n          searchText: '',\n          emptyText: 'Network not found',\n          source: filterInput(networks),\n        },\n      ])\n      .then(({networkResponse}) => {\n        if (networkResponse === 'Other') {\n          skipFlag = true;\n        } else {\n          selectedNetwork = networkResponse;\n        }\n      });\n\n    if (!skipFlag) {\n      const candidateTemplates = templates.filter(({network}) => network === selectedNetwork);\n      const paddingWidth = candidateTemplates.map(({name}) => name.length).reduce((acc, xs) => Math.max(acc, xs)) + 5;\n\n      const templateDisplays = candidateTemplates.map(\n        ({description, name}) => `${name.padEnd(paddingWidth, ' ')}${chalk.gray(description)}`\n      );\n      templateDisplays.push(`${'Other'.padEnd(paddingWidth, ' ')}${chalk.gray('Enter a custom git endpoint')}`);\n\n      await inquirer\n        .prompt([\n          {\n            name: 'templateDisplay',\n            message: 'Select a template project',\n            type: 'autocomplete',\n            searchText: '',\n            emptyText: 'Template not found',\n            source: filterInput(templateDisplays),\n          },\n        ])\n        .then(({templateDisplay}) => {\n          const templateName = (templateDisplay as string).split(' ')[0];\n          if (templateName === 'Other') {\n            skipFlag = true;\n          } else {\n            selectedTemplate = templates.find(({name}) => name === templateName);\n            flags.specVersion = selectedTemplate.specVersion;\n          }\n        });\n\n      if (skipFlag) {\n        [gitRemote, gitBranch] = await promptValidRemoteAndBranch();\n      }\n    } else {\n      [gitRemote, gitBranch] = await promptValidRemoteAndBranch();\n    }\n\n    let projectPath;\n    cli.action.start('Cloning project');\n    try {\n      if (selectedTemplate) {\n        projectPath = await cloneProjectTemplate(location, project.name, selectedTemplate);\n      } else if (skipFlag) {\n        projectPath = await cloneProjectGit(location, project.name, gitRemote, gitBranch);\n      } else {\n        throw new Error('Invalid initalization state, must select either a template project or provide a git remote');\n      }\n      cli.action.stop();\n    } catch (e) {\n      cli.action.stop();\n      this.error(e);\n    }\n\n    const [defaultRepository, defaultEndpoint, defaultAuthor, defaultVersion, defaultDescription, defaultLicense] =\n      await readDefaults(projectPath);\n\n    project.endpoint = await cli.prompt('RPC endpoint:', {\n      default: defaultEndpoint ?? 'wss://polkadot.api.onfinality.io/public-ws',\n      required: true,\n    });\n\n    project.repository = await cli.prompt('Git repository', {required: false, default: defaultRepository});\n\n    if (flags.specVersion === '0.2.0') {\n      cli.action.start('Fetching network genesis hash');\n      (project as ProjectSpecV0_2_0).genesisHash = await getGenesisHash(project.endpoint);\n      cli.action.stop();\n    }\n\n    project.author = await cli.prompt('Author', {required: true, default: defaultAuthor});\n    project.description = await cli.prompt('Description', {\n      required: false,\n      default: defaultDescription.substring(0, 40).concat('...'),\n    });\n    project.version = await cli.prompt('Version', {required: true, default: defaultVersion});\n    project.license = await cli.prompt('License', {required: true, default: defaultLicense});\n\n    cli.action.start('Preparing project');\n    await prepare(projectPath, project);\n    cli.action.stop();\n    if (flags['install-dependencies']) {\n      cli.action.start('Installing dependencies');\n      installDependencies(projectPath, flags.npm);\n      cli.action.stop();\n    }\n\n    this.log(`${project.name} is ready`);\n    process.exit(0);\n  }\n}\n"]}